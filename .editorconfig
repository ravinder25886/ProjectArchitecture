# Top-most EditorConfig file: stops search for other .editorconfig files in parent directories
root = true

# Apply rules to all C# source code files
[*.cs]
# Sort System namespaces first
dotnet_sort_system_directives_first = true

# Separate using directive groups with blank lines
dotnet_separate_import_directive_groups = true

# Place usings outside namespace declaration
csharp_using_directive_placement = outside_namespace:silent

# Prefer simplified using statements (C# 8 feature)
csharp_prefer_simple_using_statement = true:suggestion

##########################
# Indentation & Formatting
##########################

# Use spaces for indentation (no tabs)
indent_style = space

# Number of spaces per indentation level
indent_size = 4

# Tab width (in spaces), mostly for editors that render tabs
tab_width = 4

# Remove any trailing whitespace at the end of lines automatically
trim_trailing_whitespace = true

# Ensure files end with a newline character
insert_final_newline = true

##########################
# Charset & Line Endings
##########################

# Use UTF-8 encoding for all files
charset = utf-8

# Use Windows-style line endings (CRLF)
end_of_line = crlf

##########################
# Naming Conventions
##########################

# Naming rule: private readonly fields should be camelCase prefixed with underscore
dotnet_naming_rule.private_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.private_fields_should_be_camel_case.symbols = private_fields
dotnet_naming_rule.private_fields_should_be_camel_case.style = camel_case

# Define symbol group: private readonly fields
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_fields.required_modifiers = readonly

# Define naming style: camelCase with _ prefix
dotnet_naming_style.camel_case.capitalization = camel_case
dotnet_naming_style.camel_case.required_prefix = _
dotnet_naming_style.camel_case.word_separator = _

##########################
# Code Style Preferences
##########################

# Use 'var' for built-in types (int, string, etc.) — suggestion severity
csharp_style_var_for_built_in_types = true:suggestion

# Use 'var' when the type is obvious from the right-hand side — suggestion severity
csharp_style_var_when_type_is_apparent = true:suggestion

# Avoid 'var' elsewhere where the type isn't obvious — suggestion severity
csharp_style_var_elsewhere = false:suggestion

# Prefer block-bodied methods rather than expression-bodied — silent (no warnings)
csharp_style_expression_bodied_methods = false:silent

# Prefer expression-bodied properties — silent
csharp_style_expression_bodied_properties = true:silent

# Choose namespace declaration style: file-scoped or block-scoped
# Change to 'file_scoped:suggestion' to use file-scoped namespaces (without braces)
csharp_style_namespace_declarations =  file_scoped:suggestion

##########################
# Modifier Preferences
##########################

# Require explicit accessibility modifiers (public/private/etc.) — suggestion
dotnet_style_require_accessibility_modifiers = always:suggestion

##########################
# Using Directive Preferences
##########################

# Place System namespaces first when sorting 'using' directives
dotnet_sort_system_directives_first = true

# Separate 'using' directive groups with a blank line
dotnet_separate_import_directive_groups = true

# Place 'using' directives outside namespace declarations — silent (no warnings)
csharp_using_directive_placement = outside_namespace:silent

# Prefer simple 'using' statements (C# 8 feature)
csharp_prefer_simple_using_statement = true:suggestion

##########################
# Other Style Preferences
##########################

# Prefer braces for all control statements — silent
csharp_prefer_braces = true:silent

# Prefer method group conversions when possible — silent
csharp_style_prefer_method_group_conversion = true:silent

# Prefer top-level statements (C# 9 feature) — silent
csharp_style_prefer_top_level_statements = true:silent

# Prefer primary constructors (C# 12 feature, if available) — suggestion
csharp_style_prefer_primary_constructors = true:suggestion

# Prefer System.Threading.Lock (when available) — suggestion
csharp_prefer_system_threading_lock = true:suggestion

# Prefer expression-bodied constructors — silent
csharp_style_expression_bodied_constructors = false:silent

# Prefer expression-bodied operators — silent
csharp_style_expression_bodied_operators = false:silent

# Prefer expression-bodied indexers — silent
csharp_style_expression_bodied_indexers = true:silent

# Prefer expression-bodied accessors — silent
csharp_style_expression_bodied_accessors = true:silent

# Prefer expression-bodied lambdas — silent
csharp_style_expression_bodied_lambdas = true:silent

# Prefer expression-bodied local functions — silent
csharp_style_expression_bodied_local_functions = false:silent

# Do not change label indentation
csharp_indent_labels = no_change

##########################
# Additional rules for C# and VB files
##########################

[*.{cs,vb}]

# Prefer coalesce expressions (??) — suggestion
dotnet_style_coalesce_expression = true:suggestion

# Prefer null propagation (?.) — suggestion
dotnet_style_null_propagation = true:suggestion

# Prefer 'is null' checks over ReferenceEquals — suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion

# Prefer auto-properties — silent
dotnet_style_prefer_auto_properties = true:silent

# Prefer object initializers — suggestion
dotnet_style_object_initializer = true:suggestion

# Prefer collection initializers — suggestion
dotnet_style_collection_initializer = true:suggestion

# Prefer simplified boolean expressions — suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion

# Prefer conditional expressions over assignment — silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent

# Prefer conditional expressions over return — silent
dotnet_style_prefer_conditional_expression_over_return = true:silent

# Prefer explicit tuple names — suggestion
dotnet_style_explicit_tuple_names = true:suggestion

# Prefer inferred tuple names — suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion

# Prefer inferred anonymous type member names — suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion

# Prefer compound assignments (e.g., +=) — suggestion
dotnet_style_prefer_compound_assignment = true:suggestion

# Prefer simplified string interpolation — suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion

# Operator placement preference when wrapping lines: beginning of line
dotnet_style_operator_placement_when_wrapping = beginning_of_line
